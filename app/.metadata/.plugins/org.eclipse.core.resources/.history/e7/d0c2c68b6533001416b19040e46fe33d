package com.androtux;

import java.util.Set;

import android.app.Fragment;
import android.app.FragmentTransaction;
import android.bluetooth.BluetoothAdapter;
import android.bluetooth.BluetoothDevice;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.Toast;

public class SettingsFragment extends Fragment {
	
	/*private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
		@Override
	    public void onReceive(Context context, Intent intent) {
			ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(getActivity().getApplicationContext(), R.layout.fragment_settings);
	        String action = intent.getAction();
	        // When discovery finds a device
	        if (BluetoothDevice.ACTION_FOUND.equals(action)) {
	            // Get the BluetoothDevice object from the Intent
	            BluetoothDevice device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);
	            // Add the name and address to an array adapter to show in a ListView
	            arrayAdapter.add(device.getName() + "\n" + device.getAddress());
	        }
	    }
	};*/
	
	/**
	 * A placeholder fragment containing a simple view.
	 */
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
	        Bundle savedInstanceState) {
	    View rootView = inflater.inflate(R.layout.fragment_settings, container, false);
	    
	    CommunicationHandler cHandler = CommunicationHandler.getInstance();
	    /*
		ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(getActivity().getApplicationContext(), R.layout.fragment_settings);
		Set<BluetoothDevice> pairedDevices = cHandler.getBluetoohAdapter().getBondedDevices();
		// If there are paired devices
		if (pairedDevices.size() > 0) {
		    // Loop through paired devices
		    for (BluetoothDevice device : pairedDevices) {
		        // Add the name and address to an array adapter to show in a ListView
		   	 arrayAdapter.add(device.getName() + "\n" + device.getAddress());
	    }*/
		     
		TouchButton btnDiscover = (TouchButton)rootView.findViewById(R.id.btnDiscover);
	    
		btnDiscover.addOps(new Runnable() {
			@Override
			public void run() {
                BluetoothAdapter mBluetoothAdapter = CommunicationHandler.getInstance().getBluetoohAdapter();

                final BroadcastReceiver mReceiver = new BroadcastReceiver() 
                { 
                    public void onReceive(Context context, Intent intent) 
                    {
                        String action = intent.getAction(); 
                        // When discovery finds a device 
                        if (BluetoothDevice.ACTION_FOUND.equals(action)) 
                        {
	                        // Get the BluetoothDevice object from the Intent 
                        	ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(getActivity().getApplicationContext(), R.layout.fragment_settings);
	                        BluetoothDevice device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);
	                        arrayAdapter.add(device.getName() + "\n" + device.getAddress());
	                        //Toast.makeText(getActivity().getApplicationContext(), device.getName() + "\n" + device.getAddress(), 3).show();
	                        ListView lvDiscovered = (ListView)getActivity().findViewById(R.id.lvDiscovered);
	                        lvDiscovered.setAdapter(arrayAdapter);
                        }
                    }    
                };

                //String aDiscoverable = BluetoothAdapter.ACTION_REQUEST_DISCOVERABLE;
                //startActivityForResult(new Intent(aDiscoverable),DISCOVERY_REQUEST);
                IntentFilter filter = new IntentFilter(BluetoothDevice.ACTION_FOUND); 
                getActivity().getApplicationContext().registerReceiver(mReceiver, filter); 
                mBluetoothAdapter.startDiscovery();
			}
		});
		// Register the BroadcastReceiver
		//IntentFilter filter = new IntentFilter(BluetoothDevice.ACTION_FOUND);
		//	    	context.registerReceiver(mReceiver, filter); // Don't forget to unregister during onDestroy

		return rootView;
	}
	
}
